{"version":3,"file":"static/webpack/static/development/pages/votelist.js.633d9a233fce7745467c.hot-update.js","sources":["webpack:///./container/VoteList.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport withRouter from \"next/router\";\nimport Layout from \"../components/Layout\";\nimport database from \"../firebase/database\";\nimport styled from \"styled-components\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nexport class VoteList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataChannel: [],\n      channelName: \"\",\n      page: 0,\n      rowsPerPage: 5,\n      open: false,\n      channelId: \"\"\n    };\n  }\n  async componentDidMount() {\n    const dataChannel = await this.getChannel();\n    this.setState({ dataChannel });\n  }\n\n  getChannel = () => {\n    const dataChannel = database.ref(\"channel\");\n    return new Promise((resolve, reject) => {\n      dataChannel.on(\"value\", snapshot => {\n        const keys = Object.keys(snapshot.val());\n        const data = keys.map(key => ({ _id: key, ...snapshot.val()[key] }));\n        resolve(data);\n      });\n    });\n  };\n\n  handleText = event => {\n    this.setState({ channelName: event.target.value });\n  };\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n  openDiallogEdit = (channelId, channelName) => {\n    console.log(\"open\");\n    this.setState({ open: true, channelId, channelName });\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  submitForm = () => {\n    const { channelId,channelName } = this.state;\n    database.ref(`channel/${channelId}`).update({\n      name: channelName\n    })\n  };\n\n  dialogShow = () => {\n    const { open, channelName } = this.state;\n    return (\n      <Dialog\n        open={open}\n        onClose={this.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">แก้ไขข้อมูล</DialogTitle>\n        <form onSubmit={this.submitForm}>\n        <DialogContent>\n          <DialogContentText>\n              <InputForm defaultValue={channelName} onChange={this.handleText} />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"secondary\">\n            ยกเลิก\n          </Button>\n          <Button type=\"submit\" color=\"inherit\">\n            บันทึก\n          </Button>\n        </DialogActions>\n        </form>\n      </Dialog>\n    );\n  };\n\n  renderItem = () => {\n    const { dataChannel } = this.state;\n\n    return dataChannel.map((e, i) => {\n      return (\n        <TableRow key={\"rows\" + i}>\n          <TableCell\n            align=\"left\"\n            onClick={() => console.log(\"goto \")}\n            style={{ cursor: \"pointer\" }}\n          >\n            {e.name}\n          </TableCell>\n          <TableCell>{e.isVote ? \"เปิดโหวตแล้ว\" : \"ยังไม่เปิดโหวต\"}</TableCell>\n          <TableCell align=\"center\">\n            <ActionButton\n              onClick={() => this.openDiallogEdit(e._id, e.name)}\n              src=\"../static/image/pencil-edit-button.png\"\n            />\n            <ActionButton\n              onClick={() => console.log(\"delete to\")}\n              src=\"../static/image/delete.png\"\n            />\n          </TableCell>\n        </TableRow>\n      );\n    });\n  };\n\n  render() {\n    const { dataChannel, page, rowsPerPage } = this.state;\n    return (\n      <Container>\n        <Table style={{ minWidth: 700 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">ChannelName</TableCell>\n              <TableCell align=\"left\">StatusVote</TableCell>\n              <TableCell align=\"center\">action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>{this.renderItem()}</TableBody>\n        </Table>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={dataChannel.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"Previous Page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"Next Page\"\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n        {this.dialogShow()}\n      </Container>\n    );\n  }\n}\n\nexport default VoteList;\n\n////////////////////////////\nconst Container = styled.div``;\n\nconst ActionButton = styled.img`\n  cursor: pointer;\n  width: 1.5vw;\n  height: 1.5vw;\n  margin: 0 0.5vw;\n`;\n\nconst InputForm = styled.input`\n  padding: 0.5vw;\n  font-size: 1vw;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAiBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AAAA;AAAA;AACA;AACA;AA9BA;AA+BA;AAAA;AAAA;AACA;AACA;AAjCA;AAkCA;AAAA;AAAA;AACA;AACA;AApCA;AAqCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAxCA;AAyCA;AAAA;AAAA;AACA;AACA;AA3CA;AA2CA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AAjDA;AAkDA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AA7EA;AA8EA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAxGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAaA;AACA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AA4GA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AA5IA;AACA;AADA;AAAA;AA+IA;AACA;AAEA;AAEA;AAOA;;;;A","sourceRoot":""}